name: Release Build

on:
  release:
    types: [created]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: CMake Version
      run: cmake --version
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_TESTS=OFF -DUSE_AVX2=ON
      env:
        CC: gcc-14
        CXX: g++-14
    
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      env:
        CC: gcc-14
        CXX: g++-14
    
    # Tests skipped for release builds to save compute resources
    
    - name: Package
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p release/linux
        # Get the version from the release tag
        VERSION=${{ github.event.release.tag_name }}
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        
        # Assuming your main executable is in the build directory
        # Change this path if your binary location is different
        cp build/your_app_name release/linux/your_app_name
        # Copy any additional files needed for your application
        # cp -r assets release/linux/
        cd release
        tar -czvf admete_${VERSION}_linux_x86-64_avx2.tar.gz linux
    
    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-x86-64-avx2
        path: ${{github.workspace}}/release/admete_${VERSION}_linux_x86-64_avx2.tar.gz
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{github.workspace}}/release/admete_${VERSION}_linux_x86-64_avx2.tar.gz
        asset_name: admete_${VERSION}_linux_x86-64_avx2.tar.gz
        asset_content_type: application/gzip

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_TESTS=OFF -DUSE_AVX2=ON
    
    - name: Build
      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}}
    
    # Tests skipped for release builds to save compute resources
    
    - name: Package
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p release\windows
        # Get the version from the release tag
        VERSION=${{ github.event.release.tag_name }}
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        
        # Assuming your main executable is in the build directory
        # Change this path if your binary location is different
        mkdir -p release\windows
        copy build\${{env.BUILD_TYPE}}\your_app_name.exe release\windows\your_app_name.exe
        # Copy any additional files needed for your application
        # xcopy /E /I assets release\windows\assets
        cd release
        7z a admete_${VERSION}_windows_x86-64_avx2.zip windows
      shell: bash
    
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-x86-64-avx2
        path: ${{github.workspace}}/release/admete_${VERSION}_windows_x86-64_avx2.zip
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{github.workspace}}/release/admete_${VERSION}_windows_x86-64_avx2.zip
        asset_name: admete_${VERSION}_windows_x86-64_avx2.zip
        asset_content_type: application/zip
