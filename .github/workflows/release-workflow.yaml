name: Release Build

on:
  release:
    types: [created]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:    
    - uses: actions/checkout@v4
      with:
        lfs: true

    
    - name: CMake Version
      run: cmake --version
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_TESTS=OFF -DUSE_AVX2=ON
      env:
        CC: gcc-14
        CXX: g++-14
    
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      env:
        CC: gcc-14
        CXX: g++-14
    
    # Tests skipped for release builds to save compute resources
    
    - name: Prepare Binary
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p release
        # Get the version from the release tag
        VERSION="${{ github.event.release.tag_name }}"
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        
        # Copy the binary with version in the filename
        cp build/admete release/admete_${VERSION}_linux_x86-64_avx2
        echo "BINARY_PATH=release/admete_${VERSION}_linux_x86-64_avx2" >> $GITHUB_ENV
    
    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-x86-64-avx2
        path: ${{github.workspace}}/${{ env.BINARY_PATH }}
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: ${{ github.workspace }}/${{ env.BINARY_PATH }}

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_TESTS=OFF -DUSE_AVX2=ON
    
    - name: Build
      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}}
    
    # Tests skipped for release builds to save compute resources
    
    - name: Prepare Binary
      run: |
        $VERSION = "${{ github.event.release.tag_name }}"
        # Remove 'v' prefix if present
        $VERSION = $VERSION -replace '^v',''
        
        # Create release directory
        New-Item -Path "release" -ItemType Directory -Force
        
        # Copy the binary with version in the filename
        Copy-Item -Path "build\${{ env.BUILD_TYPE }}\admete.exe" -Destination "release\admete_${VERSION}_windows_x86-64_avx2.exe"
        
        echo "BINARY_PATH=release/admete_${VERSION}_windows_x86-64_avx2.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
    
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-x86-64-avx2
        path: ${{github.workspace}}/${{ env.BINARY_PATH }}
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: ${{ env.BINARY_PATH }}