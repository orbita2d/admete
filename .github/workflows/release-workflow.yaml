# .github/workflows/release.yaml
name: Release Build

on:
  release:
    types: [created]

jobs:
  build-release:
    strategy:
      matrix:
        include:
          - platform: linux
            artifact_name: linux-x86-64-avx2
          - platform: windows  
            artifact_name: windows-x86-64-avx2-mingw
    
    name: Build ${{ matrix.platform }}
    uses: ./.github/workflows/build-reusable.yaml
    with:
      platform: ${{ matrix.platform }}
      build_type: Release
      enable_tests: false
      enable_avx2: true
      artifact_name: ${{ matrix.artifact_name }}
      binary_name: admete

  upload-release-assets:
    name: Upload Release Assets
    needs: build-release
    runs-on: ubuntu-latest
    
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare Release Assets
      run: |
        VERSION="${{ github.event.release.tag_name }}"
        VERSION=${VERSION#v}  # Remove 'v' prefix if present
        
        mkdir -p release
        
        # Process all artifacts and rename with version after admete_
        for artifact_dir in artifacts/*/; do
          for file in "$artifact_dir"*; do
            if [ -f "$file" ] && [[ "$(basename "$file")" != "MANIFEST.txt" ]]; then
              filename=$(basename "$file")
              
              # Remove 'admete_' prefix and get the rest
              if [[ "$filename" == admete_* ]]; then
                suffix="${filename#admete_}"
                
                # Reconstruct with version right after admete_
                if [[ "$filename" == *.exe ]]; then
                  # For .exe files, remove .exe, add version, then add .exe back
                  suffix_no_ext="${suffix%.exe}"
                  new_name="admete_v${VERSION}_${suffix_no_ext}.exe"
                else
                  # For other files (like .so), just insert version
                  new_name="admete_v${VERSION}_${suffix}"
                fi
                
                cp "$file" "release/$new_name"
                echo "Renamed: $filename -> $new_name"
              else
                # Fallback for files not starting with admete_
                cp "$file" "release/$filename"
                echo "Copied unchanged: $filename"
              fi
            fi
          done
        done
        
        # List what we're uploading
        echo "Release assets:"
        ls -la release/
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: release/*